{"version":3,"sources":["webpack:///./resources/js/Decks/LatestDecks.vue?69e4","webpack:///./resources/js/Decks/LatestDecks.vue?d24f","webpack:///resources/js/Decks/LatestDecks.vue","webpack:///./resources/js/Decks/LatestDecks.vue","webpack:///./resources/js/Components/LazyLoader.js"],"names":["component","_h","this","$createElement","_c","_self","_l","deck","key","slug","attrs","_e","loadData","loaderCallback","loadRoute","to","from","next","callback","beforeRouteEnter","beforeRouteUpdate","created","apply","watch"],"mappings":"kGAAA,I,+CCA2M,ECe3M,CACE,WAAF,CAAI,SAAJ,KAEE,MAAF,SAEE,KALF,WAMI,MAAJ,CACM,MAAN,KAIE,SAXF,WAYI,IAAJ,kDAEI,MAAJ,CACM,MAAN,EACM,KAAN,CACA,CAAQ,KAAR,cAAQ,KAAR,cAAQ,QAAR,GACA,CAAQ,KAAR,UAAQ,SAAR,UAAQ,QAAR,WACA,CAAQ,KAAR,WAAQ,SAAR,WAAQ,QAAR,GACA,CAAQ,KAAR,iBAAQ,SAAR,iBAAQ,QAAR,MAKE,QAzBF,WAyBI,IAAJ,OACI,EAAJ,8DACM,EAAN,4C,OCnCIA,EAAY,YACd,GHRW,WAAa,IAAiBC,EAATC,KAAgBC,eAAmBC,EAAnCF,KAA0CG,MAAMD,IAAIH,EAAG,OAAOG,EAAG,MAAM,CAAvEF,KAAkF,MAAEE,EAAG,MAAvFF,KAAiGI,GAAjGJ,KAA8G,OAAE,SAASK,GAAM,OAAOH,EAAG,YAAY,CAACI,IAAID,EAAKE,KAAKC,MAAM,CAAC,KAAOH,EAAK,MAAQ,aAAY,GAA3ML,KAAkNS,SAC9N,IGUpB,EACA,KACA,KACA,MAIa,UAAAX,E,wCClBA,aAACY,GACZ,IAAIC,EAAiB,aAEfC,EAAY,SAACC,EAAIC,EAAMC,GACzBL,EAASG,GAAI,SAACG,GACVL,EAAiBK,EACjBD,QAIR,MAAO,CACHE,iBAAkBL,EAClBM,kBAAmBN,EACnBO,QAAS,WACLR,EAAeS,MAAMpB,OAEzBqB,MAAO,CACH,OAAU,WACNV,EAAeS,MAAMpB","file":"js/user.profile.decks.min.js?id=f436810786b7f64138f4","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.decks)?_c('div',_vm._l((_vm.decks),function(deck){return _c('deck-item',{key:deck.slug,attrs:{\"deck\":deck,\"theme\":\"dark\"}})}),1):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LatestDecks.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LatestDecks.vue?vue&type=script&lang=js&\"","<template>\n    <div>\n        <div v-if=\"decks\">\n            <deck-item v-for=\"deck in decks\" :deck=\"deck\" :key=\"deck.slug\" theme=\"dark\"></deck-item>\n        </div>\n    </div>\n</template>\n\n<script>\n    import axios from \"axios\";\n    import DeckItem from \"./DeckItem\";\n    import LazyLoader from \"../Components/LazyLoader\";\n    import Models from \"../Utilities/Models\";\n    import Deck from \"./Deck\";\n\n    export default {\n        components: {DeckItem},\n\n        props: ['user'],\n\n        data() {\n            return {\n                decks: {}\n            }\n        },\n\n        metaInfo() {\n            let title = this.user.name + '\\'s decks for Flesh & Blood TCG';\n\n            return {\n                title: title,\n                meta: [\n                    { vmid: 'description', name: 'description', content: title },\n                    { vmid: 'og:type', property: 'og:type', content: 'article' },\n                    { vmid: 'og:title', property: 'og:title', content: title },\n                    { vmid: 'og:description', property: 'og:description', content: title }\n                ]\n            };\n        },\n\n        mounted() {\n            axios.get('/decks/latest?user='+this.user.slug).then(response => {\n                this.decks = Models.hydrateMany(response.data.data, Deck);\n            });\n        }\n    }\n</script>\n","import { render, staticRenderFns } from \"./LatestDecks.vue?vue&type=template&id=64c6d0db&\"\nimport script from \"./LatestDecks.vue?vue&type=script&lang=js&\"\nexport * from \"./LatestDecks.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export default (loadData) => {\n    let loaderCallback = () => {};\n\n    const loadRoute = (to, from, next) => {\n        loadData(to, (callback) => {\n            loaderCallback = callback;\n            next();\n        })\n    };\n\n    return {\n        beforeRouteEnter: loadRoute,\n        beforeRouteUpdate: loadRoute,\n        created: function() {\n            loaderCallback.apply(this)\n        },\n        watch: {\n            '$route': function() {\n                loaderCallback.apply(this)\n            }\n        }\n    }\n};\n"],"sourceRoot":""}