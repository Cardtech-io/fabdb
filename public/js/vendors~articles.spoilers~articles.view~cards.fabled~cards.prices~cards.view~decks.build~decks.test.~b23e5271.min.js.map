{"version":3,"sources":["webpack:///./node_modules/marked/src/TextRenderer.js","webpack:///./node_modules/marked/src/marked.js","webpack:///./node_modules/marked/src/Parser.js","webpack:///./node_modules/marked/src/Slugger.js","webpack:///./node_modules/marked/src/Renderer.js","webpack:///./node_modules/marked/src/Lexer.js","webpack:///./node_modules/marked/src/rules.js","webpack:///./node_modules/marked/src/InlineLexer.js","webpack:///./node_modules/marked/src/helpers.js","webpack:///./node_modules/marked/src/defaults.js"],"names":["module","exports","text","href","title","Lexer","Parser","Renderer","TextRenderer","InlineLexer","Slugger","merge","checkSanitizeDeprecation","escape","getDefaults","changeDefaults","defaults","marked","src","opt","callback","Error","Object","prototype","toString","call","highlight","tokens","pending","i","lex","e","length","done","err","out","parse","token","type","lang","code","escaped","message","silent","options","setOptions","parser","lexer","inlineLexer","output","unescape","this","renderer","slugger","inline","links","inlineText","reverse","next","tok","pop","body","peek","hr","heading","depth","row","cell","j","header","tablecell","align","tablerow","cells","table","blockquote","ordered","start","list","loose","checked","task","nextToken","checkbox","push","parseText","listitem","html","paragraph","errMsg","console","log","seen","value","slug","toLowerCase","trim","replace","hasOwnProperty","originalSlug","cleanUrl","infostring","match","langPrefix","quote","level","raw","headerIds","headerPrefix","xhtml","content","flags","sanitize","baseUrl","block","rtrim","splitCells","create","rules","normal","pedantic","gfm","top","cap","bull","b","item","listStart","listItems","t","space","tag","l","isordered","istask","ischecked","newline","exec","substring","lastToken","trimRight","codeBlockStyle","fences","nptable","split","test","indexOf","RegExp","bullet","smartLists","slice","join","charAt","undefined","pre","sanitizer","def","lheading","charCodeAt","noopTest","edit","_paragraph","_label","_title","getRegex","source","_tag","_comment","autolink","url","link","reflink","nolink","strong","em","br","del","_punctuation","_escapes","_scheme","_email","_attribute","_href","_extended_email","_backpedal","breaks","findClosingBracket","prevCapZero","inLink","inRawBlock","lastParenIndex","linkLen","outputLink","escapes","codespan","mangle","smartypants","image","ch","Math","random","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","unescapeTest","_","n","String","fromCharCode","parseInt","caret","nonWordAndColonTest","originIndependentUrl","baseUrls","justDomain","protocol","domain","resolveUrl","base","relativeBase","str","c","invert","suffLen","currChar","substr","encode","regex","obj","name","val","prot","decodeURIComponent","encodeURI","target","key","arguments","tableRow","count","offset","curr","splice","warn","newDefaults"],"mappings":"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","file":"js/vendors~articles.spoilers~articles.view~cards.fabled~cards.prices~cards.view~decks.build~decks.test.~b23e5271.min.js?id=d86333a6c9e52fe682bc","sourcesContent":["/**\n * TextRenderer\n * returns only the textual part of the token\n */\nmodule.exports = class TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n};\n","const Lexer = require('./Lexer.js');\nconst Parser = require('./Parser.js');\nconst Renderer = require('./Renderer.js');\nconst TextRenderer = require('./TextRenderer.js');\nconst InlineLexer = require('./InlineLexer.js');\nconst Slugger = require('./Slugger.js');\nconst {\n  merge,\n  checkSanitizeDeprecation,\n  escape\n} = require('./helpers.js');\nconst {\n  getDefaults,\n  changeDefaults,\n  defaults\n} = require('./defaults.js');\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n    const highlight = opt.highlight;\n    let tokens,\n      pending,\n      i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    const done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      let out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.Slugger = Slugger;\n\nmarked.parse = marked;\n\nmodule.exports = marked;\n","const Renderer = require('./Renderer.js');\nconst Slugger = require('./Slugger.js');\nconst InlineLexer = require('./InlineLexer.js');\nconst TextRenderer = require('./TextRenderer.js');\nconst { defaults } = require('./defaults.js');\nconst {\n  merge,\n  unescape\n} = require('./helpers.js');\n\n/**\n * Parsing & Compiling\n */\nmodule.exports = class Parser {\n  constructor(options) {\n    this.tokens = [];\n    this.token = null;\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  };\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens) {\n    this.inline = new InlineLexer(tokens.links, this.options);\n    // use an InlineLexer with a TextRenderer to extract pure text\n    this.inlineText = new InlineLexer(\n      tokens.links,\n      merge({}, this.options, { renderer: new TextRenderer() })\n    );\n    this.tokens = tokens.reverse();\n\n    let out = '';\n    while (this.next()) {\n      out += this.tok();\n    }\n\n    return out;\n  };\n\n  /**\n   * Next Token\n   */\n  next() {\n    this.token = this.tokens.pop();\n    return this.token;\n  };\n\n  /**\n   * Preview Next Token\n   */\n  peek() {\n    return this.tokens[this.tokens.length - 1] || 0;\n  };\n\n  /**\n   * Parse Text Tokens\n   */\n  parseText() {\n    let body = this.token.text;\n\n    while (this.peek().type === 'text') {\n      body += '\\n' + this.next().text;\n    }\n\n    return this.inline.output(body);\n  };\n\n  /**\n   * Parse Current Token\n   */\n  tok() {\n    let body = '';\n    switch (this.token.type) {\n      case 'space': {\n        return '';\n      }\n      case 'hr': {\n        return this.renderer.hr();\n      }\n      case 'heading': {\n        return this.renderer.heading(\n          this.inline.output(this.token.text),\n          this.token.depth,\n          unescape(this.inlineText.output(this.token.text)),\n          this.slugger);\n      }\n      case 'code': {\n        return this.renderer.code(this.token.text,\n          this.token.lang,\n          this.token.escaped);\n      }\n      case 'table': {\n        let header = '',\n          i,\n          row,\n          cell,\n          j;\n\n        // header\n        cell = '';\n        for (i = 0; i < this.token.header.length; i++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(this.token.header[i]),\n            { header: true, align: this.token.align[i] }\n          );\n        }\n        header += this.renderer.tablerow(cell);\n\n        for (i = 0; i < this.token.cells.length; i++) {\n          row = this.token.cells[i];\n\n          cell = '';\n          for (j = 0; j < row.length; j++) {\n            cell += this.renderer.tablecell(\n              this.inline.output(row[j]),\n              { header: false, align: this.token.align[j] }\n            );\n          }\n\n          body += this.renderer.tablerow(cell);\n        }\n        return this.renderer.table(header, body);\n      }\n      case 'blockquote_start': {\n        body = '';\n\n        while (this.next().type !== 'blockquote_end') {\n          body += this.tok();\n        }\n\n        return this.renderer.blockquote(body);\n      }\n      case 'list_start': {\n        body = '';\n        const ordered = this.token.ordered,\n          start = this.token.start;\n\n        while (this.next().type !== 'list_end') {\n          body += this.tok();\n        }\n\n        return this.renderer.list(body, ordered, start);\n      }\n      case 'list_item_start': {\n        body = '';\n        const loose = this.token.loose;\n        const checked = this.token.checked;\n        const task = this.token.task;\n\n        if (this.token.task) {\n          if (loose) {\n            if (this.peek().type === 'text') {\n              const nextToken = this.peek();\n              nextToken.text = this.renderer.checkbox(checked) + ' ' + nextToken.text;\n            } else {\n              this.tokens.push({\n                type: 'text',\n                text: this.renderer.checkbox(checked)\n              });\n            }\n          } else {\n            body += this.renderer.checkbox(checked);\n          }\n        }\n\n        while (this.next().type !== 'list_item_end') {\n          body += !loose && this.token.type === 'text'\n            ? this.parseText()\n            : this.tok();\n        }\n        return this.renderer.listitem(body, task, checked);\n      }\n      case 'html': {\n        // TODO parse inline content if parameter markdown=1\n        return this.renderer.html(this.token.text);\n      }\n      case 'paragraph': {\n        return this.renderer.paragraph(this.inline.output(this.token.text));\n      }\n      case 'text': {\n        return this.renderer.paragraph(this.parseText());\n      }\n      default: {\n        const errMsg = 'Token with \"' + this.token.type + '\" type was not found.';\n        if (this.options.silent) {\n          console.log(errMsg);\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n  };\n};\n","/**\n * Slugger generates header id\n */\nmodule.exports = class Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * Convert string to unique id\n   */\n  slug(value) {\n    let slug = value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n\n    if (this.seen.hasOwnProperty(slug)) {\n      const originalSlug = slug;\n      do {\n        this.seen[originalSlug]++;\n        slug = originalSlug + '-' + this.seen[originalSlug];\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    this.seen[slug] = 0;\n\n    return slug;\n  };\n};\n","const { defaults } = require('./defaults.js');\nconst {\n  cleanUrl,\n  escape\n} = require('./helpers.js');\n\n/**\n * Renderer\n */\nmodule.exports = class Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang, true)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  };\n\n  blockquote(quote) {\n    return '<blockquote>\\n' + quote + '</blockquote>\\n';\n  };\n\n  html(html) {\n    return html;\n  };\n\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      return '<h'\n        + level\n        + ' id=\"'\n        + this.options.headerPrefix\n        + slugger.slug(raw)\n        + '\">'\n        + text\n        + '</h'\n        + level\n        + '>\\n';\n    }\n    // ignore IDs\n    return '<h' + level + '>' + text + '</h' + level + '>\\n';\n  };\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  };\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  };\n\n  listitem(text) {\n    return '<li>' + text + '</li>\\n';\n  };\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  };\n\n  paragraph(text) {\n    return '<p>' + text + '</p>\\n';\n  };\n\n  table(header, body) {\n    if (body) body = '<tbody>' + body + '</tbody>';\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  };\n\n  tablerow(content) {\n    return '<tr>\\n' + content + '</tr>\\n';\n  };\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? '<' + type + ' align=\"' + flags.align + '\">'\n      : '<' + type + '>';\n    return tag + content + '</' + type + '>\\n';\n  };\n\n  // span level renderer\n  strong(text) {\n    return '<strong>' + text + '</strong>';\n  };\n\n  em(text) {\n    return '<em>' + text + '</em>';\n  };\n\n  codespan(text) {\n    return '<code>' + text + '</code>';\n  };\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  };\n\n  del(text) {\n    return '<del>' + text + '</del>';\n  };\n\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + escape(href) + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  };\n\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  };\n\n  text(text) {\n    return text;\n  };\n};\n","const { defaults } = require('./defaults.js');\nconst { block } = require('./rules.js');\nconst {\n  rtrim,\n  splitCells,\n  escape\n} = require('./helpers.js');\n\n/**\n * Block Lexer\n */\nmodule.exports = class Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.rules = block.normal;\n\n    if (this.options.pedantic) {\n      this.rules = block.pedantic;\n    } else if (this.options.gfm) {\n      this.rules = block.gfm;\n    }\n  }\n\n  /**\n   * Expose Block Rules\n   */\n  static get rules() {\n    return block;\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  };\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n')\n      .replace(/\\t/g, '    ');\n\n    return this.token(src, true);\n  };\n\n  /**\n   * Lexing\n   */\n  token(src, top) {\n    src = src.replace(/^ +$/gm, '');\n    let next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      listStart,\n      listItems,\n      t,\n      space,\n      i,\n      tag,\n      l,\n      isordered,\n      istask,\n      ischecked;\n\n    while (src) {\n      // newline\n      if (cap = this.rules.newline.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (cap[0].length > 1) {\n          this.tokens.push({\n            type: 'space'\n          });\n        }\n      }\n\n      // code\n      if (cap = this.rules.code.exec(src)) {\n        const lastToken = this.tokens[this.tokens.length - 1];\n        src = src.substring(cap[0].length);\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && lastToken.type === 'paragraph') {\n          lastToken.text += '\\n' + cap[0].trimRight();\n        } else {\n          cap = cap[0].replace(/^ {4}/gm, '');\n          this.tokens.push({\n            type: 'code',\n            codeBlockStyle: 'indented',\n            text: !this.options.pedantic\n              ? rtrim(cap, '\\n')\n              : cap\n          });\n        }\n        continue;\n      }\n\n      // fences\n      if (cap = this.rules.fences.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'code',\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: cap[3] || ''\n        });\n        continue;\n      }\n\n      // heading\n      if (cap = this.rules.heading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[1].length,\n          text: cap[2]\n        });\n        continue;\n      }\n\n      // table no leading pipe (gfm)\n      if (cap = this.rules.nptable.exec(src)) {\n        item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          src = src.substring(cap[0].length);\n\n          for (i = 0; i < item.align.length; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          for (i = 0; i < item.cells.length; i++) {\n            item.cells[i] = splitCells(item.cells[i], item.header.length);\n          }\n\n          this.tokens.push(item);\n\n          continue;\n        }\n      }\n\n      // hr\n      if (cap = this.rules.hr.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'hr'\n        });\n        continue;\n      }\n\n      // blockquote\n      if (cap = this.rules.blockquote.exec(src)) {\n        src = src.substring(cap[0].length);\n\n        this.tokens.push({\n          type: 'blockquote_start'\n        });\n\n        cap = cap[0].replace(/^ *> ?/gm, '');\n\n        // Pass `top` to keep the current\n        // \"toplevel\" state. This is exactly\n        // how markdown.pl works.\n        this.token(cap, top);\n\n        this.tokens.push({\n          type: 'blockquote_end'\n        });\n\n        continue;\n      }\n\n      // list\n      if (cap = this.rules.list.exec(src)) {\n        src = src.substring(cap[0].length);\n        bull = cap[2];\n        isordered = bull.length > 1;\n\n        listStart = {\n          type: 'list_start',\n          ordered: isordered,\n          start: isordered ? +bull : '',\n          loose: false\n        };\n\n        this.tokens.push(listStart);\n\n        // Get each top-level item.\n        cap = cap[0].match(this.rules.item);\n\n        listItems = [];\n        next = false;\n        l = cap.length;\n        i = 0;\n\n        for (; i < l; i++) {\n          item = cap[i];\n\n          // Remove the list item's bullet\n          // so it is seen as the next token.\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+\\.) */, '');\n\n          // Outdent whatever the\n          // list item contains. Hacky.\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic\n              ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n              : item.replace(/^ {1,4}/gm, '');\n          }\n\n          // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n          if (i !== l - 1) {\n            b = block.bullet.exec(cap[i + 1])[0];\n            if (bull.length > 1 ? b.length === 1\n              : (b.length > 1 || (this.options.smartLists && b !== bull))) {\n              src = cap.slice(i + 1).join('\\n') + src;\n              i = l - 1;\n            }\n          }\n\n          // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n          loose = next || /\\n\\n(?!\\s*$)/.test(item);\n          if (i !== l - 1) {\n            next = item.charAt(item.length - 1) === '\\n';\n            if (!loose) loose = next;\n          }\n\n          if (loose) {\n            listStart.loose = true;\n          }\n\n          // Check for task list items\n          istask = /^\\[[ xX]\\] /.test(item);\n          ischecked = undefined;\n          if (istask) {\n            ischecked = item[1] !== ' ';\n            item = item.replace(/^\\[[ xX]\\] +/, '');\n          }\n\n          t = {\n            type: 'list_item_start',\n            task: istask,\n            checked: ischecked,\n            loose: loose\n          };\n\n          listItems.push(t);\n          this.tokens.push(t);\n\n          // Recurse.\n          this.token(item, false);\n\n          this.tokens.push({\n            type: 'list_item_end'\n          });\n        }\n\n        if (listStart.loose) {\n          l = listItems.length;\n          i = 0;\n          for (; i < l; i++) {\n            listItems[i].loose = true;\n          }\n        }\n\n        this.tokens.push({\n          type: 'list_end'\n        });\n\n        continue;\n      }\n\n      // html\n      if (cap = this.rules.html.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: this.options.sanitize\n            ? 'paragraph'\n            : 'html',\n          pre: !this.options.sanitizer\n            && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0]\n        });\n        continue;\n      }\n\n      // def\n      if (top && (cap = this.rules.def.exec(src))) {\n        src = src.substring(cap[0].length);\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        if (!this.tokens.links[tag]) {\n          this.tokens.links[tag] = {\n            href: cap[2],\n            title: cap[3]\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (cap = this.rules.table.exec(src)) {\n        item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          src = src.substring(cap[0].length);\n\n          for (i = 0; i < item.align.length; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          for (i = 0; i < item.cells.length; i++) {\n            item.cells[i] = splitCells(\n              item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''),\n              item.header.length);\n          }\n\n          this.tokens.push(item);\n\n          continue;\n        }\n      }\n\n      // lheading\n      if (cap = this.rules.lheading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1]\n        });\n        continue;\n      }\n\n      // top-level paragraph\n      if (top && (cap = this.rules.paragraph.exec(src))) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'paragraph',\n          text: cap[1].charAt(cap[1].length - 1) === '\\n'\n            ? cap[1].slice(0, -1)\n            : cap[1]\n        });\n        continue;\n      }\n\n      // text\n      if (cap = this.rules.text.exec(src)) {\n        // Top-level should never reach here.\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'text',\n          text: cap[0]\n        });\n        continue;\n      }\n\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n\n    return this.tokens;\n  };\n};\n","const {\n  noopTest,\n  edit,\n  merge\n} = require('./helpers.js');\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6}) +([^\\n]*?)(?: +#+)? *(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  nptable: noopTest,\n  table: noopTest,\n  lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}\\.)/;\nblock.item = /^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  nptable: '^ *([^|\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' *([-:]+ *\\\\|[-| :]*)' // Align\n    + '(?:\\\\n((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)', // Cells\n  table: '^ *\\\\|(.+)\\\\n' // Header\n    + ' *\\\\|?( *[-:]+[-| :]*)' // Align\n    + '(?:\\\\n *((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n});\n\nblock.gfm.nptable = edit(block.gfm.nptable)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n});\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  strong: /^__([^\\s_])__(?!_)|^\\*\\*([^\\s*])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n  em: /^_([^\\s_])_(?!_)|^\\*([^\\s*<\\[])\\*(?!\\*)|^_([^\\s<][\\s\\S]*?[^\\s_])_(?!_|[^\\spunctuation])|^_([^\\s_<][\\s\\S]*?[^\\s])_(?!_|[^\\spunctuation])|^\\*([^\\s<\"][\\s\\S]*?[^\\s\\*])\\*(?!\\*|[^\\spunctuation])|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n))|(?= {2,}\\n))/\n};\n\n// list of punctuation marks from common mark spec\n// without ` and ] to workaround Rule 17 (inline code blocks/links)\ninline._punctuation = '!\"#$%&\\'()*+,\\\\-./:;<=>?@\\\\[^_{|}~';\ninline.em = edit(inline.em).replace(/punctuation/g, inline._punctuation).getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', block._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[[^\\[\\]]*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\[<>]?|[^\\s<>\\\\])*>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?= {2,}\\n|[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n});\n\nmodule.exports = {\n  block,\n  inline\n};\n","const Renderer = require('./Renderer.js');\nconst { defaults } = require('./defaults.js');\nconst { inline } = require('./rules.js');\nconst {\n  findClosingBracket,\n  escape\n} = require('./helpers.js');\n\n/**\n * Inline Lexer & Compiler\n */\nmodule.exports = class InlineLexer {\n  constructor(links, options) {\n    this.options = options || defaults;\n    this.links = links;\n    this.rules = inline.normal;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n\n    if (!this.links) {\n      throw new Error('Tokens array requires a `links` property.');\n    }\n\n    if (this.options.pedantic) {\n      this.rules = inline.pedantic;\n    } else if (this.options.gfm) {\n      if (this.options.breaks) {\n        this.rules = inline.breaks;\n      } else {\n        this.rules = inline.gfm;\n      }\n    }\n  }\n\n  /**\n   * Expose Inline Rules\n   */\n  static get rules() {\n    return inline;\n  }\n\n  /**\n   * Static Lexing/Compiling Method\n   */\n  static output(src, links, options) {\n    const inline = new InlineLexer(links, options);\n    return inline.output(src);\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  output(src) {\n    let out = '',\n      link,\n      text,\n      href,\n      title,\n      cap,\n      prevCapZero;\n\n    while (src) {\n      // escape\n      if (cap = this.rules.escape.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += escape(cap[1]);\n        continue;\n      }\n\n      // tag\n      if (cap = this.rules.tag.exec(src)) {\n        if (!this.inLink && /^<a /i.test(cap[0])) {\n          this.inLink = true;\n        } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.inLink = false;\n        }\n        if (!this.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.inRawBlock = true;\n        } else if (this.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.inRawBlock = false;\n        }\n\n        src = src.substring(cap[0].length);\n        out += this.renderer.html(this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]);\n        continue;\n      }\n\n      // link\n      if (cap = this.rules.link.exec(src)) {\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n        src = src.substring(cap[0].length);\n        this.inLink = true;\n        href = cap[2];\n        if (this.options.pedantic) {\n          link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          } else {\n            title = '';\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n        href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n        out += this.outputLink(cap, {\n          href: InlineLexer.escapes(href),\n          title: InlineLexer.escapes(title)\n        });\n        this.inLink = false;\n        continue;\n      }\n\n      // reflink, nolink\n      if ((cap = this.rules.reflink.exec(src))\n          || (cap = this.rules.nolink.exec(src))) {\n        src = src.substring(cap[0].length);\n        link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = this.links[link.toLowerCase()];\n        if (!link || !link.href) {\n          out += cap[0].charAt(0);\n          src = cap[0].substring(1) + src;\n          continue;\n        }\n        this.inLink = true;\n        out += this.outputLink(cap, link);\n        this.inLink = false;\n        continue;\n      }\n\n      // strong\n      if (cap = this.rules.strong.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\n        continue;\n      }\n\n      // em\n      if (cap = this.rules.em.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\n        continue;\n      }\n\n      // code\n      if (cap = this.rules.code.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.codespan(escape(cap[2].trim(), true));\n        continue;\n      }\n\n      // br\n      if (cap = this.rules.br.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.br();\n        continue;\n      }\n\n      // del (gfm)\n      if (cap = this.rules.del.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.del(this.output(cap[1]));\n        continue;\n      }\n\n      // autolink\n      if (cap = this.rules.autolink.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (cap[2] === '@') {\n          text = escape(this.mangle(cap[1]));\n          href = 'mailto:' + text;\n        } else {\n          text = escape(cap[1]);\n          href = text;\n        }\n        out += this.renderer.link(href, null, text);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.inLink && (cap = this.rules.url.exec(src))) {\n        if (cap[2] === '@') {\n          text = escape(cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n          text = escape(cap[0]);\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n        src = src.substring(cap[0].length);\n        out += this.renderer.link(href, null, text);\n        continue;\n      }\n\n      // text\n      if (cap = this.rules.text.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (this.inRawBlock) {\n          out += this.renderer.text(this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0]);\n        } else {\n          out += this.renderer.text(escape(this.smartypants(cap[0])));\n        }\n        continue;\n      }\n\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n\n    return out;\n  }\n\n  static escapes(text) {\n    return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\n  }\n\n  /**\n   * Compile Link\n   */\n  outputLink(cap, link) {\n    const href = link.href,\n      title = link.title ? escape(link.title) : null;\n\n    return cap[0].charAt(0) !== '!'\n      ? this.renderer.link(href, title, this.output(cap[1]))\n      : this.renderer.image(href, title, escape(cap[1]));\n  }\n\n  /**\n   * Smartypants Transformations\n   */\n  smartypants(text) {\n    if (!this.options.smartypants) return text;\n    return text\n      // em-dashes\n      .replace(/---/g, '\\u2014')\n      // en-dashes\n      .replace(/--/g, '\\u2013')\n      // opening singles\n      .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n      // closing singles & apostrophes\n      .replace(/'/g, '\\u2019')\n      // opening doubles\n      .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n      // closing doubles\n      .replace(/\"/g, '\\u201d')\n      // ellipses\n      .replace(/\\.{3}/g, '\\u2026');\n  }\n\n  /**\n   * Mangle Links\n   */\n  mangle(text) {\n    if (!this.options.mangle) return text;\n    const l = text.length;\n    let out = '',\n      i = 0,\n      ch;\n\n    for (; i < l; i++) {\n      ch = text.charCodeAt(i);\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n};\n","/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = /[&<>\"']/g;\nconst escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nconst escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction merge(obj) {\n  let i = 1,\n    target,\n    key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\nmodule.exports = {\n  escape,\n  unescape,\n  edit,\n  cleanUrl,\n  resolveUrl,\n  noopTest,\n  merge,\n  splitCells,\n  rtrim,\n  findClosingBracket,\n  checkSanitizeDeprecation\n};\n","function getDefaults() {\n  return {\n    baseUrl: null,\n    breaks: false,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    xhtml: false\n  };\n}\n\nfunction changeDefaults(newDefaults) {\n  module.exports.defaults = newDefaults;\n}\n\nmodule.exports = {\n  defaults: getDefaults(),\n  getDefaults,\n  changeDefaults\n};\n"],"sourceRoot":""}