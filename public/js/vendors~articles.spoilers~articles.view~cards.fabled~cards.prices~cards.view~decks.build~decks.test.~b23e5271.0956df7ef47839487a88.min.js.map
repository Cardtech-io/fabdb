{"version":3,"sources":["webpack:///./node_modules/marked/src/marked.js","webpack:///./node_modules/marked/src/Renderer.js","webpack:///./node_modules/marked/src/rules.js","webpack:///./node_modules/marked/src/Slugger.js","webpack:///./node_modules/marked/src/InlineLexer.js","webpack:///./node_modules/marked/src/TextRenderer.js","webpack:///./node_modules/marked/src/Lexer.js","webpack:///./node_modules/marked/src/Parser.js","webpack:///./node_modules/marked/src/helpers.js","webpack:///./node_modules/marked/src/defaults.js"],"names":["Lexer","Parser","Renderer","TextRenderer","InlineLexer","Slugger","merge","checkSanitizeDeprecation","escape","getDefaults","changeDefaults","defaults","marked","src","opt","callback","Error","Object","prototype","toString","call","highlight","tokens","pending","i","lex","e","length","done","err","out","parse","token","type","text","lang","code","escaped","message","silent","options","setOptions","parser","lexer","inlineLexer","output","module","exports","cleanUrl","this","infostring","match","langPrefix","quote","html","level","raw","slugger","headerIds","headerPrefix","slug","xhtml","body","ordered","start","checked","header","content","flags","align","href","title","sanitize","baseUrl","noopTest","edit","block","newline","fences","hr","heading","blockquote","list","def","nptable","table","lheading","_paragraph","replace","_label","_title","getRegex","bullet","item","source","_tag","_comment","paragraph","normal","gfm","pedantic","inline","autolink","url","tag","link","reflink","nolink","strong","em","br","del","_punctuation","_escapes","_scheme","_email","_attribute","_href","_extended_email","_backpedal","breaks","seen","value","toLowerCase","trim","hasOwnProperty","originalSlug","findClosingBracket","links","rules","renderer","cap","prevCapZero","exec","substring","inLink","test","inRawBlock","sanitizer","lastParenIndex","linkLen","indexOf","slice","outputLink","escapes","charAt","codespan","mangle","smartypants","charCodeAt","image","l","ch","Math","random","rtrim","splitCells","create","top","next","loose","bull","b","listStart","listItems","t","space","isordered","istask","ischecked","push","lastToken","trimRight","codeBlockStyle","depth","split","cells","RegExp","smartLists","join","undefined","task","pre","unescape","inlineText","reverse","tok","pop","peek","row","cell","j","tablecell","tablerow","nextToken","checkbox","parseText","listitem","errMsg","console","log","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","unescapeTest","_","n","String","fromCharCode","parseInt","caret","nonWordAndColonTest","originIndependentUrl","baseUrls","justDomain","protocol","domain","resolveUrl","base","relativeBase","str","c","invert","suffLen","currChar","substr","encode","regex","obj","name","val","prot","decodeURIComponent","encodeURI","target","key","arguments","tableRow","count","offset","curr","splice","warn","newDefaults"],"mappings":"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","file":"js/vendors~articles.spoilers~articles.view~cards.fabled~cards.prices~cards.view~decks.build~decks.test.~b23e5271.0956df7ef47839487a88.min.js","sourcesContent":["const Lexer = require('./Lexer.js');\nconst Parser = require('./Parser.js');\nconst Renderer = require('./Renderer.js');\nconst TextRenderer = require('./TextRenderer.js');\nconst InlineLexer = require('./InlineLexer.js');\nconst Slugger = require('./Slugger.js');\nconst {\n  merge,\n  checkSanitizeDeprecation,\n  escape\n} = require('./helpers.js');\nconst {\n  getDefaults,\n  changeDefaults,\n  defaults\n} = require('./defaults.js');\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n    const highlight = opt.highlight;\n    let tokens,\n      pending,\n      i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    const done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      let out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.Slugger = Slugger;\n\nmarked.parse = marked;\n\nmodule.exports = marked;\n","const { defaults } = require('./defaults.js');\nconst {\n  cleanUrl,\n  escape\n} = require('./helpers.js');\n\n/**\n * Renderer\n */\nmodule.exports = class Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang, true)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  };\n\n  blockquote(quote) {\n    return '<blockquote>\\n' + quote + '</blockquote>\\n';\n  };\n\n  html(html) {\n    return html;\n  };\n\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      return '<h'\n        + level\n        + ' id=\"'\n        + this.options.headerPrefix\n        + slugger.slug(raw)\n        + '\">'\n        + text\n        + '</h'\n        + level\n        + '>\\n';\n    }\n    // ignore IDs\n    return '<h' + level + '>' + text + '</h' + level + '>\\n';\n  };\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  };\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  };\n\n  listitem(text) {\n    return '<li>' + text + '</li>\\n';\n  };\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  };\n\n  paragraph(text) {\n    return '<p>' + text + '</p>\\n';\n  };\n\n  table(header, body) {\n    if (body) body = '<tbody>' + body + '</tbody>';\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  };\n\n  tablerow(content) {\n    return '<tr>\\n' + content + '</tr>\\n';\n  };\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? '<' + type + ' align=\"' + flags.align + '\">'\n      : '<' + type + '>';\n    return tag + content + '</' + type + '>\\n';\n  };\n\n  // span level renderer\n  strong(text) {\n    return '<strong>' + text + '</strong>';\n  };\n\n  em(text) {\n    return '<em>' + text + '</em>';\n  };\n\n  codespan(text) {\n    return '<code>' + text + '</code>';\n  };\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  };\n\n  del(text) {\n    return '<del>' + text + '</del>';\n  };\n\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + escape(href) + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  };\n\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  };\n\n  text(text) {\n    return text;\n  };\n};\n","const {\n  noopTest,\n  edit,\n  merge\n} = require('./helpers.js');\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6}) +([^\\n]*?)(?: +#+)? *(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  nptable: noopTest,\n  table: noopTest,\n  lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}\\.)/;\nblock.item = /^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  nptable: '^ *([^|\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' *([-:]+ *\\\\|[-| :]*)' // Align\n    + '(?:\\\\n((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)', // Cells\n  table: '^ *\\\\|(.+)\\\\n' // Header\n    + ' *\\\\|?( *[-:]+[-| :]*)' // Align\n    + '(?:\\\\n *((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n});\n\nblock.gfm.nptable = edit(block.gfm.nptable)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n});\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  strong: /^__([^\\s_])__(?!_)|^\\*\\*([^\\s*])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n  em: /^_([^\\s_])_(?!_)|^\\*([^\\s*<\\[])\\*(?!\\*)|^_([^\\s<][\\s\\S]*?[^\\s_])_(?!_|[^\\spunctuation])|^_([^\\s_<][\\s\\S]*?[^\\s])_(?!_|[^\\spunctuation])|^\\*([^\\s<\"][\\s\\S]*?[^\\s\\*])\\*(?!\\*|[^\\spunctuation])|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n))|(?= {2,}\\n))/\n};\n\n// list of punctuation marks from common mark spec\n// without ` and ] to workaround Rule 17 (inline code blocks/links)\ninline._punctuation = '!\"#$%&\\'()*+,\\\\-./:;<=>?@\\\\[^_{|}~';\ninline.em = edit(inline.em).replace(/punctuation/g, inline._punctuation).getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', block._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[[^\\[\\]]*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\[<>]?|[^\\s<>\\\\])*>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?= {2,}\\n|[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n});\n\nmodule.exports = {\n  block,\n  inline\n};\n","/**\n * Slugger generates header id\n */\nmodule.exports = class Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * Convert string to unique id\n   */\n  slug(value) {\n    let slug = value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n\n    if (this.seen.hasOwnProperty(slug)) {\n      const originalSlug = slug;\n      do {\n        this.seen[originalSlug]++;\n        slug = originalSlug + '-' + this.seen[originalSlug];\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    this.seen[slug] = 0;\n\n    return slug;\n  };\n};\n","const Renderer = require('./Renderer.js');\nconst { defaults } = require('./defaults.js');\nconst { inline } = require('./rules.js');\nconst {\n  findClosingBracket,\n  escape\n} = require('./helpers.js');\n\n/**\n * Inline Lexer & Compiler\n */\nmodule.exports = class InlineLexer {\n  constructor(links, options) {\n    this.options = options || defaults;\n    this.links = links;\n    this.rules = inline.normal;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n\n    if (!this.links) {\n      throw new Error('Tokens array requires a `links` property.');\n    }\n\n    if (this.options.pedantic) {\n      this.rules = inline.pedantic;\n    } else if (this.options.gfm) {\n      if (this.options.breaks) {\n        this.rules = inline.breaks;\n      } else {\n        this.rules = inline.gfm;\n      }\n    }\n  }\n\n  /**\n   * Expose Inline Rules\n   */\n  static get rules() {\n    return inline;\n  }\n\n  /**\n   * Static Lexing/Compiling Method\n   */\n  static output(src, links, options) {\n    const inline = new InlineLexer(links, options);\n    return inline.output(src);\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  output(src) {\n    let out = '',\n      link,\n      text,\n      href,\n      title,\n      cap,\n      prevCapZero;\n\n    while (src) {\n      // escape\n      if (cap = this.rules.escape.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += escape(cap[1]);\n        continue;\n      }\n\n      // tag\n      if (cap = this.rules.tag.exec(src)) {\n        if (!this.inLink && /^<a /i.test(cap[0])) {\n          this.inLink = true;\n        } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.inLink = false;\n        }\n        if (!this.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.inRawBlock = true;\n        } else if (this.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.inRawBlock = false;\n        }\n\n        src = src.substring(cap[0].length);\n        out += this.renderer.html(this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]);\n        continue;\n      }\n\n      // link\n      if (cap = this.rules.link.exec(src)) {\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n        src = src.substring(cap[0].length);\n        this.inLink = true;\n        href = cap[2];\n        if (this.options.pedantic) {\n          link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          } else {\n            title = '';\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n        href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n        out += this.outputLink(cap, {\n          href: InlineLexer.escapes(href),\n          title: InlineLexer.escapes(title)\n        });\n        this.inLink = false;\n        continue;\n      }\n\n      // reflink, nolink\n      if ((cap = this.rules.reflink.exec(src))\n          || (cap = this.rules.nolink.exec(src))) {\n        src = src.substring(cap[0].length);\n        link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = this.links[link.toLowerCase()];\n        if (!link || !link.href) {\n          out += cap[0].charAt(0);\n          src = cap[0].substring(1) + src;\n          continue;\n        }\n        this.inLink = true;\n        out += this.outputLink(cap, link);\n        this.inLink = false;\n        continue;\n      }\n\n      // strong\n      if (cap = this.rules.strong.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\n        continue;\n      }\n\n      // em\n      if (cap = this.rules.em.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\n        continue;\n      }\n\n      // code\n      if (cap = this.rules.code.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.codespan(escape(cap[2].trim(), true));\n        continue;\n      }\n\n      // br\n      if (cap = this.rules.br.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.br();\n        continue;\n      }\n\n      // del (gfm)\n      if (cap = this.rules.del.exec(src)) {\n        src = src.substring(cap[0].length);\n        out += this.renderer.del(this.output(cap[1]));\n        continue;\n      }\n\n      // autolink\n      if (cap = this.rules.autolink.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (cap[2] === '@') {\n          text = escape(this.mangle(cap[1]));\n          href = 'mailto:' + text;\n        } else {\n          text = escape(cap[1]);\n          href = text;\n        }\n        out += this.renderer.link(href, null, text);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.inLink && (cap = this.rules.url.exec(src))) {\n        if (cap[2] === '@') {\n          text = escape(cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n          text = escape(cap[0]);\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n        src = src.substring(cap[0].length);\n        out += this.renderer.link(href, null, text);\n        continue;\n      }\n\n      // text\n      if (cap = this.rules.text.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (this.inRawBlock) {\n          out += this.renderer.text(this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0]);\n        } else {\n          out += this.renderer.text(escape(this.smartypants(cap[0])));\n        }\n        continue;\n      }\n\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n\n    return out;\n  }\n\n  static escapes(text) {\n    return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\n  }\n\n  /**\n   * Compile Link\n   */\n  outputLink(cap, link) {\n    const href = link.href,\n      title = link.title ? escape(link.title) : null;\n\n    return cap[0].charAt(0) !== '!'\n      ? this.renderer.link(href, title, this.output(cap[1]))\n      : this.renderer.image(href, title, escape(cap[1]));\n  }\n\n  /**\n   * Smartypants Transformations\n   */\n  smartypants(text) {\n    if (!this.options.smartypants) return text;\n    return text\n      // em-dashes\n      .replace(/---/g, '\\u2014')\n      // en-dashes\n      .replace(/--/g, '\\u2013')\n      // opening singles\n      .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n      // closing singles & apostrophes\n      .replace(/'/g, '\\u2019')\n      // opening doubles\n      .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n      // closing doubles\n      .replace(/\"/g, '\\u201d')\n      // ellipses\n      .replace(/\\.{3}/g, '\\u2026');\n  }\n\n  /**\n   * Mangle Links\n   */\n  mangle(text) {\n    if (!this.options.mangle) return text;\n    const l = text.length;\n    let out = '',\n      i = 0,\n      ch;\n\n    for (; i < l; i++) {\n      ch = text.charCodeAt(i);\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n};\n","/**\n * TextRenderer\n * returns only the textual part of the token\n */\nmodule.exports = class TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n};\n","const { defaults } = require('./defaults.js');\nconst { block } = require('./rules.js');\nconst {\n  rtrim,\n  splitCells,\n  escape\n} = require('./helpers.js');\n\n/**\n * Block Lexer\n */\nmodule.exports = class Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.rules = block.normal;\n\n    if (this.options.pedantic) {\n      this.rules = block.pedantic;\n    } else if (this.options.gfm) {\n      this.rules = block.gfm;\n    }\n  }\n\n  /**\n   * Expose Block Rules\n   */\n  static get rules() {\n    return block;\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  };\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n')\n      .replace(/\\t/g, '    ');\n\n    return this.token(src, true);\n  };\n\n  /**\n   * Lexing\n   */\n  token(src, top) {\n    src = src.replace(/^ +$/gm, '');\n    let next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      listStart,\n      listItems,\n      t,\n      space,\n      i,\n      tag,\n      l,\n      isordered,\n      istask,\n      ischecked;\n\n    while (src) {\n      // newline\n      if (cap = this.rules.newline.exec(src)) {\n        src = src.substring(cap[0].length);\n        if (cap[0].length > 1) {\n          this.tokens.push({\n            type: 'space'\n          });\n        }\n      }\n\n      // code\n      if (cap = this.rules.code.exec(src)) {\n        const lastToken = this.tokens[this.tokens.length - 1];\n        src = src.substring(cap[0].length);\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && lastToken.type === 'paragraph') {\n          lastToken.text += '\\n' + cap[0].trimRight();\n        } else {\n          cap = cap[0].replace(/^ {4}/gm, '');\n          this.tokens.push({\n            type: 'code',\n            codeBlockStyle: 'indented',\n            text: !this.options.pedantic\n              ? rtrim(cap, '\\n')\n              : cap\n          });\n        }\n        continue;\n      }\n\n      // fences\n      if (cap = this.rules.fences.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'code',\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: cap[3] || ''\n        });\n        continue;\n      }\n\n      // heading\n      if (cap = this.rules.heading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[1].length,\n          text: cap[2]\n        });\n        continue;\n      }\n\n      // table no leading pipe (gfm)\n      if (cap = this.rules.nptable.exec(src)) {\n        item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          src = src.substring(cap[0].length);\n\n          for (i = 0; i < item.align.length; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          for (i = 0; i < item.cells.length; i++) {\n            item.cells[i] = splitCells(item.cells[i], item.header.length);\n          }\n\n          this.tokens.push(item);\n\n          continue;\n        }\n      }\n\n      // hr\n      if (cap = this.rules.hr.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'hr'\n        });\n        continue;\n      }\n\n      // blockquote\n      if (cap = this.rules.blockquote.exec(src)) {\n        src = src.substring(cap[0].length);\n\n        this.tokens.push({\n          type: 'blockquote_start'\n        });\n\n        cap = cap[0].replace(/^ *> ?/gm, '');\n\n        // Pass `top` to keep the current\n        // \"toplevel\" state. This is exactly\n        // how markdown.pl works.\n        this.token(cap, top);\n\n        this.tokens.push({\n          type: 'blockquote_end'\n        });\n\n        continue;\n      }\n\n      // list\n      if (cap = this.rules.list.exec(src)) {\n        src = src.substring(cap[0].length);\n        bull = cap[2];\n        isordered = bull.length > 1;\n\n        listStart = {\n          type: 'list_start',\n          ordered: isordered,\n          start: isordered ? +bull : '',\n          loose: false\n        };\n\n        this.tokens.push(listStart);\n\n        // Get each top-level item.\n        cap = cap[0].match(this.rules.item);\n\n        listItems = [];\n        next = false;\n        l = cap.length;\n        i = 0;\n\n        for (; i < l; i++) {\n          item = cap[i];\n\n          // Remove the list item's bullet\n          // so it is seen as the next token.\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+\\.) */, '');\n\n          // Outdent whatever the\n          // list item contains. Hacky.\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic\n              ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n              : item.replace(/^ {1,4}/gm, '');\n          }\n\n          // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n          if (i !== l - 1) {\n            b = block.bullet.exec(cap[i + 1])[0];\n            if (bull.length > 1 ? b.length === 1\n              : (b.length > 1 || (this.options.smartLists && b !== bull))) {\n              src = cap.slice(i + 1).join('\\n') + src;\n              i = l - 1;\n            }\n          }\n\n          // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n          loose = next || /\\n\\n(?!\\s*$)/.test(item);\n          if (i !== l - 1) {\n            next = item.charAt(item.length - 1) === '\\n';\n            if (!loose) loose = next;\n          }\n\n          if (loose) {\n            listStart.loose = true;\n          }\n\n          // Check for task list items\n          istask = /^\\[[ xX]\\] /.test(item);\n          ischecked = undefined;\n          if (istask) {\n            ischecked = item[1] !== ' ';\n            item = item.replace(/^\\[[ xX]\\] +/, '');\n          }\n\n          t = {\n            type: 'list_item_start',\n            task: istask,\n            checked: ischecked,\n            loose: loose\n          };\n\n          listItems.push(t);\n          this.tokens.push(t);\n\n          // Recurse.\n          this.token(item, false);\n\n          this.tokens.push({\n            type: 'list_item_end'\n          });\n        }\n\n        if (listStart.loose) {\n          l = listItems.length;\n          i = 0;\n          for (; i < l; i++) {\n            listItems[i].loose = true;\n          }\n        }\n\n        this.tokens.push({\n          type: 'list_end'\n        });\n\n        continue;\n      }\n\n      // html\n      if (cap = this.rules.html.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: this.options.sanitize\n            ? 'paragraph'\n            : 'html',\n          pre: !this.options.sanitizer\n            && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0]\n        });\n        continue;\n      }\n\n      // def\n      if (top && (cap = this.rules.def.exec(src))) {\n        src = src.substring(cap[0].length);\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        if (!this.tokens.links[tag]) {\n          this.tokens.links[tag] = {\n            href: cap[2],\n            title: cap[3]\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (cap = this.rules.table.exec(src)) {\n        item = {\n          type: 'table',\n          header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          src = src.substring(cap[0].length);\n\n          for (i = 0; i < item.align.length; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          for (i = 0; i < item.cells.length; i++) {\n            item.cells[i] = splitCells(\n              item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''),\n              item.header.length);\n          }\n\n          this.tokens.push(item);\n\n          continue;\n        }\n      }\n\n      // lheading\n      if (cap = this.rules.lheading.exec(src)) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'heading',\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1]\n        });\n        continue;\n      }\n\n      // top-level paragraph\n      if (top && (cap = this.rules.paragraph.exec(src))) {\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'paragraph',\n          text: cap[1].charAt(cap[1].length - 1) === '\\n'\n            ? cap[1].slice(0, -1)\n            : cap[1]\n        });\n        continue;\n      }\n\n      // text\n      if (cap = this.rules.text.exec(src)) {\n        // Top-level should never reach here.\n        src = src.substring(cap[0].length);\n        this.tokens.push({\n          type: 'text',\n          text: cap[0]\n        });\n        continue;\n      }\n\n      if (src) {\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n      }\n    }\n\n    return this.tokens;\n  };\n};\n","const Renderer = require('./Renderer.js');\nconst Slugger = require('./Slugger.js');\nconst InlineLexer = require('./InlineLexer.js');\nconst TextRenderer = require('./TextRenderer.js');\nconst { defaults } = require('./defaults.js');\nconst {\n  merge,\n  unescape\n} = require('./helpers.js');\n\n/**\n * Parsing & Compiling\n */\nmodule.exports = class Parser {\n  constructor(options) {\n    this.tokens = [];\n    this.token = null;\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  };\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens) {\n    this.inline = new InlineLexer(tokens.links, this.options);\n    // use an InlineLexer with a TextRenderer to extract pure text\n    this.inlineText = new InlineLexer(\n      tokens.links,\n      merge({}, this.options, { renderer: new TextRenderer() })\n    );\n    this.tokens = tokens.reverse();\n\n    let out = '';\n    while (this.next()) {\n      out += this.tok();\n    }\n\n    return out;\n  };\n\n  /**\n   * Next Token\n   */\n  next() {\n    this.token = this.tokens.pop();\n    return this.token;\n  };\n\n  /**\n   * Preview Next Token\n   */\n  peek() {\n    return this.tokens[this.tokens.length - 1] || 0;\n  };\n\n  /**\n   * Parse Text Tokens\n   */\n  parseText() {\n    let body = this.token.text;\n\n    while (this.peek().type === 'text') {\n      body += '\\n' + this.next().text;\n    }\n\n    return this.inline.output(body);\n  };\n\n  /**\n   * Parse Current Token\n   */\n  tok() {\n    let body = '';\n    switch (this.token.type) {\n      case 'space': {\n        return '';\n      }\n      case 'hr': {\n        return this.renderer.hr();\n      }\n      case 'heading': {\n        return this.renderer.heading(\n          this.inline.output(this.token.text),\n          this.token.depth,\n          unescape(this.inlineText.output(this.token.text)),\n          this.slugger);\n      }\n      case 'code': {\n        return this.renderer.code(this.token.text,\n          this.token.lang,\n          this.token.escaped);\n      }\n      case 'table': {\n        let header = '',\n          i,\n          row,\n          cell,\n          j;\n\n        // header\n        cell = '';\n        for (i = 0; i < this.token.header.length; i++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(this.token.header[i]),\n            { header: true, align: this.token.align[i] }\n          );\n        }\n        header += this.renderer.tablerow(cell);\n\n        for (i = 0; i < this.token.cells.length; i++) {\n          row = this.token.cells[i];\n\n          cell = '';\n          for (j = 0; j < row.length; j++) {\n            cell += this.renderer.tablecell(\n              this.inline.output(row[j]),\n              { header: false, align: this.token.align[j] }\n            );\n          }\n\n          body += this.renderer.tablerow(cell);\n        }\n        return this.renderer.table(header, body);\n      }\n      case 'blockquote_start': {\n        body = '';\n\n        while (this.next().type !== 'blockquote_end') {\n          body += this.tok();\n        }\n\n        return this.renderer.blockquote(body);\n      }\n      case 'list_start': {\n        body = '';\n        const ordered = this.token.ordered,\n          start = this.token.start;\n\n        while (this.next().type !== 'list_end') {\n          body += this.tok();\n        }\n\n        return this.renderer.list(body, ordered, start);\n      }\n      case 'list_item_start': {\n        body = '';\n        const loose = this.token.loose;\n        const checked = this.token.checked;\n        const task = this.token.task;\n\n        if (this.token.task) {\n          if (loose) {\n            if (this.peek().type === 'text') {\n              const nextToken = this.peek();\n              nextToken.text = this.renderer.checkbox(checked) + ' ' + nextToken.text;\n            } else {\n              this.tokens.push({\n                type: 'text',\n                text: this.renderer.checkbox(checked)\n              });\n            }\n          } else {\n            body += this.renderer.checkbox(checked);\n          }\n        }\n\n        while (this.next().type !== 'list_item_end') {\n          body += !loose && this.token.type === 'text'\n            ? this.parseText()\n            : this.tok();\n        }\n        return this.renderer.listitem(body, task, checked);\n      }\n      case 'html': {\n        // TODO parse inline content if parameter markdown=1\n        return this.renderer.html(this.token.text);\n      }\n      case 'paragraph': {\n        return this.renderer.paragraph(this.inline.output(this.token.text));\n      }\n      case 'text': {\n        return this.renderer.paragraph(this.parseText());\n      }\n      default: {\n        const errMsg = 'Token with \"' + this.token.type + '\" type was not found.';\n        if (this.options.silent) {\n          console.log(errMsg);\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n  };\n};\n","/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = /[&<>\"']/g;\nconst escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nconst escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction merge(obj) {\n  let i = 1,\n    target,\n    key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\nmodule.exports = {\n  escape,\n  unescape,\n  edit,\n  cleanUrl,\n  resolveUrl,\n  noopTest,\n  merge,\n  splitCells,\n  rtrim,\n  findClosingBracket,\n  checkSanitizeDeprecation\n};\n","function getDefaults() {\n  return {\n    baseUrl: null,\n    breaks: false,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    xhtml: false\n  };\n}\n\nfunction changeDefaults(newDefaults) {\n  module.exports.defaults = newDefaults;\n}\n\nmodule.exports = {\n  defaults: getDefaults(),\n  getDefaults,\n  changeDefaults\n};\n"],"sourceRoot":""}